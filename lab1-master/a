[33mcommit 1868c9bdcf4ae46ad55756d7b72b7e5d97845be3[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: Zavoi Calin <brolincz@gmail.com>
Date:   Wed Mar 18 16:36:25 2020 +0200

    First commit

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..d6cbdcb[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,110 @@[m
[32m+[m
[32m+[m[32m# Created by https://www.gitignore.io/api/java,intellij[m
[32m+[m[32m# Edit at https://www.gitignore.io/?templates=java,intellij[m
[32m+[m
[32m+[m[32m### Intellij ###[m
[32m+[m[32m# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm[m
[32m+[m[32m# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839[m
[32m+[m
[32m+[m[32m# User-specific stuff[m
[32m+[m[32m.idea/**/workspace.xml[m
[32m+[m[32m.idea/**/tasks.xml[m
[32m+[m[32m.idea/**/usage.statistics.xml[m
[32m+[m[32m.idea/**/dictionaries[m
[32m+[m[32m.idea/**/shelf[m
[32m+[m
[32m+[m[32m# Generated files[m
[32m+[m[32m.idea/**/contentModel.xml[m
[32m+[m
[32m+[m[32m# Sensitive or high-churn files[m
[32m+[m[32m.idea/**/dataSources/[m
[32m+[m[32m.idea/**/dataSources.ids[m
[32m+[m[32m.idea/**/dataSources.local.xml[m
[32m+[m[32m.idea/**/sqlDataSources.xml[m
[32m+[m[32m.idea/**/dynamic.xml[m
[32m+[m[32m.idea/**/uiDesigner.xml[m
[32m+[m[32m.idea/**/dbnavigator.xml[m
[32m+[m
[32m+[m[32m# Gradle[m
[32m+[m[32m.idea/**/gradle.xml[m
[32m+[m[32m.idea/**/libraries[m
[32m+[m
[32m+[m[32m# Gradle and Maven with auto-import[m
[32m+[m[32m# When using Gradle or Maven with auto-import, you should exclude module files,[m
[32m+[m[32m# since they will be recreated, and may cause churn.  Uncomment if using[m
[32m+[m[32m# auto-import.[m
[32m+[m[32m# .idea/modules.xml[m
[32m+[m[32m# .idea/*.iml[m
[32m+[m[32m# .idea/modules[m
[32m+[m
[32m+[m[32m# CMake[m
[32m+[m[32mcmake-build-*/[m
[32m+[m
[32m+[m[32m# Mongo Explorer plugin[m
[32m+[m[32m.idea/**/mongoSettings.xml[m
[32m+[m
[32m+[m[32m# File-based project format[m
[32m+[m[32m*.iws[m
[32m+[m
[32m+[m[32m# IntelliJ[m
[32m+[m[32mout/[m
[32m+[m[32m.idea/[m
[32m+[m
[32m+[m[32m# mpeltonen/sbt-idea plugin[m
[32m+[m[32m.idea_modules/[m
[32m+[m
[32m+[m[32m# JIRA plugin[m
[32m+[m[32matlassian-ide-plugin.xml[m
[32m+[m
[32m+[m[32m# Cursive Clojure plugin[m
[32m+[m[32m.idea/replstate.xml[m
[32m+[m
[32m+[m[32m# Crashlytics plugin (for Android Studio and IntelliJ)[m
[32m+[m[32mcom_crashlytics_export_strings.xml[m
[32m+[m[32mcrashlytics.properties[m
[32m+[m[32mcrashlytics-build.properties[m
[32m+[m[32mfabric.properties[m
[32m+[m
[32m+[m[32m# Editor-based Rest Client[m
[32m+[m[32m.idea/httpRequests[m
[32m+[m
[32m+[m[32m# Android studio 3.1+ serialized cache file[m
[32m+[m[32m.idea/caches/build_file_checksums.ser[m
[32m+[m
[32m+[m[32m### Intellij Patch ###[m
[32m+[m[32m# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721[m
[32m+[m
[32m+[m[32m# *.iml[m
[32m+[m[32m# modules.xml[m
[32m+[m[32m# .idea/misc.xml[m
[32m+[m[32m# *.ipr[m
[32m+[m
[32m+[m[32m# Sonarlint plugin[m
[32m+[m[32m.idea/sonarlint[m
[32m+[m
[32m+[m[32m### Java ###[m
[32m+[m[32m# Compiled class file[m
[32m+[m[32m*.class[m
[32m+[m
[32m+[m[32m# Log file[m
[32m+[m[32m*.log[m
[32m+[m
[32m+[m[32m# BlueJ files[m
[32m+[m[32m*.ctxt[m
[32m+[m
[32m+[m[32m# Mobile Tools for Java (J2ME)[m
[32m+[m[32m.mtj.tmp/[m
[32m+[m
[32m+[m[32m# Package Files #[m
[32m+[m[32m*.jar[m
[32m+[m[32m*.war[m
[32m+[m[32m*.nar[m
[32m+[m[32m*.ear[m
[32m+[m[32m*.zip[m
[32m+[m[32m*.tar.gz[m
[32m+[m[32m*.rar[m
[32m+[m
[32m+[m[32m# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml[m
[32m+[m[32mhs_err_pid*[m
[32m+[m
[32m+[m[32m# End of https://www.gitignore.io/api/java,intellij[m
[1mdiff --git a/LICENSE b/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..e2aba02[m
[1m--- /dev/null[m
[1m+++ b/LICENSE[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mMIT License[m
[32m+[m
[32m+[m[32mCopyright (c) 2019 fis-2019[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32mof this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32min the Software without restriction, including without limitation the rights[m
[32m+[m[32mto use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32mcopies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32mfurnished to do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in all[m
[32m+[m[32mcopies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[32m+[m[32mSOFTWARE.[m
[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..3e3839c[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m# project[m
\ No newline at end of file[m
[1mdiff --git a/project.iml b/project.iml[m
[1mnew file mode 100644[m
[1mindex 0000000..d5c0743[m
[1m--- /dev/null[m
[1m+++ b/project.iml[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<module type="JAVA_MODULE" version="4">[m
[32m+[m[32m  <component name="NewModuleRootManager" inherit-compiler-output="true">[m
[32m+[m[32m    <exclude-output />[m
[32m+[m[32m    <content url="file://$MODULE_DIR$">[m
[32m+[m[32m      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />[m
[32m+[m[32m    </content>[m
[32m+[m[32m    <orderEntry type="inheritedJdk" />[m
[32m+[m[32m    <orderEntry type="sourceFolder" forTests="false" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</module>[m
[32m+[m
[1mdiff --git a/src/loose/oose/fis/Main.java b/src/loose/oose/fis/Main.java[m
[1mnew file mode 100644[m
[1mindex 0000000..e3ae53f[m
[1m--- /dev/null[m
[1m+++ b/src/loose/oose/fis/Main.java[m
[36m@@ -0,0 +1,43 @@[m
[32m+[m[32mpackage loose.oose.fis;[m
[32m+[m
[32m+[m[32mimport loose.oose.fis.documents.Document;[m
[32m+[m[32mimport loose.oose.fis.documents.JSON;[m
[32m+[m[32mimport loose.oose.fis.documents.XML;[m
[32m+[m[32mimport loose.oose.fis.processors.Procesor;[m
[32m+[m[32mimport loose.oose.fis.processors.ProcesorCautare;[m
[32m+[m[32mimport loose.oose.fis.processors.ProcesorCompus;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m
[32m+[m[32mpublic class Main {[m
[32m+[m
[32m+[m[32m    public static void main(String[] args) {[m
[32m+[m
[32m+[m[32m        String[] xmlList = new String[6];[m
[32m+[m[32m        xmlList[0] = "<tag1>";[m
[32m+[m[32m        xmlList[1] = "text1";[m
[32m+[m[32m        xmlList[2] = "</tag1>";[m
[32m+[m[32m        xmlList[3] = "<tag2>";[m
[32m+[m[32m        xmlList[4] = "text2";[m
[32m+[m[32m        xmlList[5] = "</tag2>";[m
[32m+[m
[32m+[m[32m        Document xml = new XML(xmlList);[m
[32m+[m
[32m+[m[32m        ArrayList<Document> documente = new ArrayList<>();[m
[32m+[m[32m        documente.add(xml);[m
[32m+[m
[32m+[m[32m        Procesor c1 = new ProcesorCautare("text1");[m
[32m+[m[32m        Procesor c2 = new ProcesorCautare("text3");[m
[32m+[m[32m        Procesor c3 = new ProcesorCautare("text2");[m
[32m+[m
[32m+[m[32m        ProcesorCompus pc1 = new ProcesorCompus();[m
[32m+[m[32m        pc1.adaugaProcesor(c1);[m
[32m+[m[32m        pc1.adaugaProcesor(c2);[m
[32m+[m
[32m+[m[32m        ProcesorCompus pc2 = new ProcesorCompus();[m
[32m+[m[32m        pc2.adaugaProcesor(pc1);[m
[32m+[m[32m        pc2.adaugaProcesor(c3);[m
[32m+[m
[32m+[m[32m        System.out.println(pc2.proceseaza(documente));[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/loose/oose/fis/documents/Document.java b/src/loose/oose/fis/documents/Document.java[m
[1mnew file mode 100644[m
[1mindex 0000000..1493aa4[m
[1m--- /dev/null[m
[1m+++ b/src/loose/oose/fis/documents/Document.java[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mpackage loose.oose.fis.documents;[m
[32m+[m
[32m+[m[32mpublic abstract class Document {[m
[32m+[m[32m    protected String[] continut;[m
[32m+[m
[32m+[m[32m    public Document(String[] continut) {[m
[32m+[m[32m        this.continut = continut;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public abstract String[] analizeaza();[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public String toString() {[m
[32m+[m[32m        String res = "";[m
[32m+[m[32m        for (String cuvant : continut) {[m
[32m+[m[32m            res += cuvant + " ";[m
[32m+[m[32m        }[m
[32m+[m[32m        return res;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/loose/oose/fis/documents/JSON.java b/src/loose/oose/fis/documents/JSON.java[m
[1mnew file mode 100644[m
[1mindex 0000000..6b68e5d[m
[1m--- /dev/null[m
[1m+++ b/src/loose/oose/fis/documents/JSON.java[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mpackage loose.oose.fis.documents;[m
[32m+[m
[32m+[m[32mimport java.util.Arrays;[m
[32m+[m
[32m+[m[32mpublic class JSON extends Document {[m
[32m+[m[32m    public JSON(String[] continut) {[m
[32m+[m[32m        super(continut);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public String[] analizeaza() {[m
[32m+[m[32m        String[] res = new String[continut.length];[m
[32m+[m[32m        int      pos = 0;[m
[32m+[m
[32m+[m[32m        for (String cuvant : continut) {[m
[32m+[m[32m            if (!cuvant.contains(":")) {[m
[32m+[m[32m                res[pos] = cuvant;[m
[32m+[m[32m                pos++;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return Arrays.copyOf(res, pos);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public String toString() {[m
[32m+[m[32m        return "JSON " + super.toString();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/loose/oose/fis/documents/XML.java b/src/loose/oose/fis/documents/XML.java[m
[1mnew file mode 100644[m
[1mindex 0000000..0ccdb43[m
[1m--- /dev/null[m
[1m+++ b/src/loose/oose/fis/documents/XML.java[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mpackage loose.oose.fis.documents;[m
[32m+[m
[32m+[m[32mimport java.util.Arrays;[m
[32m+[m
[32m+[m[32mpublic class XML extends Document {[m
[32m+[m[32m    public XML(String[] continut) {[m
[32m+[m[32m        super(continut);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public String[] analizeaza() {[m
[32m+[m[32m        String[] res = new String[continut.length];[m
[32m+[m[32m        int      pos = 0;[m
[32m+[m
[32m+[m[32m        for (String cuvant : continut) {[m
[32m+[m[32m            if (cuvant.charAt(0) != '<' || cuvant.charAt(cuvant.length() - 1) != '>') {[m
[32m+[m[32m                res[pos] = cuvant;[m
[32m+[m[32m                pos++;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return Arrays.copyOf(res, pos);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public String toString() {[m
[32m+[m[32m        return "XML " + super.toString();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/loose/oose/fis/processors/Procesor.java b/src/loose/oose/fis/processors/Procesor.java[m
[1mnew file mode 100644[m
[1mindex 0000000..f2d75ca[m
[1m--- /dev/null[m
[1m+++ b/src/loose/oose/fis/processors/Procesor.java[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mpackage loose.oose.fis.processors;[m
[32m+[m
[32m+[m[32mimport loose.oose.fis.documents.Document;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m
[32m+[m[32mpublic interface Procesor {[m
[32m+[m[32m    int proceseaza(ArrayList<Document> documente);[m
[32m+[m[32m}[m
[1mdiff --git a/src/loose/oose/fis/processors/ProcesorCautare.java b/src/loose/oose/fis/processors/ProcesorCautare.java[m
[1mnew file mode 100644[m
[1mindex 0000000..150e81c[m
[1m--- /dev/null[m
[1m+++ b/src/loose/oose/fis/processors/ProcesorCautare.java[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mpackage loose.oose.fis.processors;[m
[32m+[m
[32m+[m[32mimport loose.oose.fis.documents.Document;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m
[32m+[m[32mpublic class ProcesorCautare implements Procesor {[m
[32m+[m[32m    private String text;[m
[32m+[m
[32m+[m[32m    public ProcesorCautare(String text) {[m
[32m+[m[32m        this.text = text;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public int proceseaza(ArrayList<Document> documente) {[m
[32m+[m[32m        int res = 0;[m
[32m+[m
[32m+[m[32m        for (Document document : documente) {[m
[32m+[m[32m            String[] continut = document.analizeaza();[m
[32m+[m[32m            for (String cuvant : continut) {[m
[32m+[m[32m                if (cuvant.equals(text)) {[m
[32m+[m[32m                    res++;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return res;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/loose/oose/fis/processors/ProcesorCompus.java b/src/loose/oose/fis/processors/ProcesorCompus.java[m
[1mnew file mode 100644[m
[1mindex 0000000..c50ee41[m
[1m--- /dev/null[m
[1m+++ b/src/loose/oose/fis/processors/ProcesorCompus.java[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32mpackage loose.oose.fis.processors;[m
[32m+[m
[32m+[m[32mimport loose.oose.fis.documents.Document;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m
[32m+[m[32mpublic class ProcesorCompus implements Procesor {[m
[32m+[m[32m    private ArrayList<Procesor> procesoare = new ArrayList<>();[m
[32m+[m
[32m+[m[32m    public void adaugaProcesor(Procesor procesor) {[m
[32m+[m[32m        procesoare.add(procesor);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public int proceseaza(ArrayList<Document> documente) {[m
[32m+[m[32m        int res = 0;[m
[32m+[m
[32m+[m[32m        for (Procesor procesor : procesoare) {[m
[32m+[m[32m            res += procesor.proceseaza(documente);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return res;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
